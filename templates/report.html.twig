{% extends 'base.html.twig' %}

{% block title %}
    About
{% endblock %}

{% block content %}
    <h1>
        Redovisning
    </h1>
    <article id="kmom01">
        <h2>
            Kmom01
        </h2>
        <p>
            <strong>
                &bull; Berätta kort om dina förkunskaper och tidigare
                erfarenheter kring objektorientering.
            </strong>
            <br /><br />

            - Jag har inte så mycket tidigare erfarenheter vad det gäller just
            objektorientering förutom diverse tidigare kurser i programmering.
            Jag har sysslat litegrann med objekt med JavaScript i olika
            sammanhang.

            <br /><br /><br />

            <strong>
                &bull; Berätta kort om PHPs modell för klasser och objekt. Vilka
                är de grunder man behöver veta/förstå för att kunna komma igång
                och skapa sina första klasser?
            </strong>
            <br /><br />

            - En klass är en mall som definierar egenskaper och beteenden för
            objekt. Objekt är konkreta förekomster av en viss klass och skapas
            utifrån dess mall. Användning av klasser och objekt möjliggör
            återanvändning och strukturerad kod.
            <br /><br /><br />

            <strong>
                &bull; Reflektera kort över den kodbas, koden, strukturen som
                användes till uppgiften me/report, hur uppfattar du den?
            </strong>
            <br /><br />

            - Koden var lätt att förstå och välstrukturerad med välkända
            designmönster på lämpligt sätt. Vissa utmaningar uppstod dock vid
            förståelsen av instruktionerna till Symfony. Ibland ville saker inte
            fungera direkt, som tänkt.

            <br /><br /><br />

            <strong>
                &bull; Med tanke på artikeln “PHP The Right Way”, vilka delar in
                den finner du extra intressanta och värdefulla? Är det några
                särskilda områden som du känner att du vill veta mer om? Lyft
                fram några delar av artikeln som du känner mer värdefulla.
            </strong>
            <br /><br />

            - Det som verkligen tilltalar mig med "PHP The Right Way"-artikeln
            är avsnittet om säkerhet. Jag anser att säkerhet är en absolut
            grundläggande och avgörande aspekt inom webbutveckling, eftersom den
            har en direkt påverkan på användarnas integritet. Genom att använda
            bästa praxis inom säkerhet kan man skydda webbapplikationer från
            attacker och garantera att användardata hanteras på ett ansvarsfullt
            sätt.
            <br /><br />
            Avsnittet täcker ämnen som webbapplikationssäkerhet, lösenordshashning
            och datafiltrering och är därför särskilt intressant för mig. Jag anser
            att dessa ämnen är grundläggande och viktiga för att säkra både webbapplikationer
            och användardata. Genom att ha en god förståelse av dessa ämnen kan man
            minska risken för attacker och skydda användarnas data på ett mer effektivt
            sätt. Jag skulle i synnerhet vilja veta mer om SQL Injection, Cross-Site
            Scripting, Local/Remote File Inclusion samt olika vägar att skydda sig
            mot dessa.
            <br /><br /><br />

            <strong>&bull; Vilken är din TIL för detta kmom?</strong>
            <br /><br />

            - Jag har lärt mig mer om Symfony, Composer och PHP generellt. Jag
            har också lärt mig mer om objektorientering som begrepp och vad det
            innebär. Jag har också lärt mig litegrann om säkerhet vad det gäller
            PHP.

            <br /><br /><br />
        </p>
    </article>

    <article id="kmom02">
        <h2>
            Kmom02
        </h2>
        <p>
            <strong>
                &bull; Förklara kort de objektorienterade konstruktionerna arv,
                komposition, interface och trait och hur de används i PHP.
            </strong><br /><br />

            - Arv i PHP möjliggör att skapa nya klasser baserat på befintliga
            klasser, vilket innebär att den nya klassen kommer att ärva
            egenskaper och metoder från den befintliga klassen.
            <br /><br />
            Komposition i PHP möjliggör att objekt kan innehålla andra objekt som
            en del av sina egenskaper. Istället för att en klass utökas genom arv,
            kan en klass samarbeta med andra objekt genom att de inkluderas som en
            del av klassens egenskaper.
            <br /><br />
            Interface i PHP är en slags kontrakt som kräver att en klass implementerar
            vissa metoder och egenskaper. Det gör det möjligt att definiera ett gränssnitt
            som flera klasser kan implementera på olika sätt.
            <br /><br />
            Trait i PHP är en slags återanvändbar kod som kan användas för att tillföra
            funktionalitet till flera klasser utan att man behöver använda arv. Traits
            kan inkluderas i klasser med hjälp av en "use" deklaration och gör det
            möjligt att återanvända kod på ett smidigt sätt.

            <br /><br /><br />

            <strong>
                &bull; Berätta om din implementation från uppgiften. Hur löste
                du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential
                ser du i din koden och dina klasser?
            </strong><br /><br />

            - Jag tyckte att uppgiften var utmanande, men jag kände mig nöjd med
            min implementation. Jag tror dock att det alltid finns utrymme för
            förbättringar, särskilt i fråga om att göra koden mer DRY, öka
            återanvändbarheten av klasser och göra den mer strukturerad.

            <br /><br />
            Jag tror också att jag skulle kunna lära mig mer om objektorienterad
            programmering och implementera mer avancerade tekniker för att ytterligare
            förbättra min kod.
            <br /><br /><br />

            <strong>
                &bull; Vilka är dina reflektioner så här långt med att jobb i
                Symfony med applikationskod enligt MVC?
            </strong><br /><br />

            - Jag har märkt att det känns bättre och bättre att arbeta i Symfony
            och jag ser nyttan av att använda MVC-mönstret för att organisera
            applikationskoden.
            <br /><br />
            Samtidigt föredrar jag vanligtvis att arbeta med JavaScript och dess
            ramverk istället för PHP. Men jag ser definitivt värdet i att lära mig
            Symfony och dess arkitektur.
            <br /><br /><br />

            <strong>
                &bull; Vilken är din TIL för detta kmom?
            </strong><br /><br />
            - Jag har lärt mig att jobba med klasser och objekt i PHP.

            <br /><br /><br />
        </p>
    </article>

    <article id="kmom03">
        <h2>
            Kmom03
        </h2>
        <p>
            text here
        </p>
    </article>

    <article id="kmom04">
        <h2>
            Kmom04
        </h2>
        <p>
            text here
        </p>
    </article>

    <article id="kmom05">
        <h2>
            Kmom05
        </h2>
        <p>
            text here
        </p>
    </article>

    <article id="kmom06">
        <h2>
            Kmom06
        </h2>
        <p>
            text here
        </p>
    </article>
{% endblock %}

{% block sidebar %}
    <aside id="sidebar">
        <h1>
            Kursmoment
        </h1>
        <ul>
            <li><a href="#kmom01">kmom01</a></li>
            <li><a href="#kmom02">kmom02</a></li>
            <li><a href="#kmom03">kmom03</a></li>
            <li><a href="#kmom04">kmom04</a></li>
            <li><a href="#kmom05">kmom05</a></li>
            <li><a href="#kmom06">kmom06</a></li>
        </ul>
    </aside>
{% endblock %}
