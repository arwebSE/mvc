{% extends 'base.html.twig' %}

{% block title %}
    About
{% endblock %}

{% block content %}
    <h1>
        Redovisning
    </h1>
    <article id="kmom01">
        <h2>
            Kmom01
        </h2>
        <p>
            <strong>
                &bull; Berätta kort om dina förkunskaper och tidigare
                erfarenheter kring objektorientering.
            </strong>
            <br /><br />

            - Jag har inte så mycket tidigare erfarenheter vad det gäller just
            objektorientering förutom diverse tidigare kurser i programmering.
            Jag har sysslat litegrann med objekt med JavaScript i olika
            sammanhang.

            <br /><br /><br />

            <strong>
                &bull; Berätta kort om PHPs modell för klasser och objekt. Vilka
                är de grunder man behöver veta/förstå för att kunna komma igång
                och skapa sina första klasser?
            </strong>
            <br /><br />

            - En klass är en mall som definierar egenskaper och beteenden för
            objekt. Objekt är konkreta förekomster av en viss klass och skapas
            utifrån dess mall. Användning av klasser och objekt möjliggör
            återanvändning och strukturerad kod.
            <br /><br /><br />

            <strong>
                &bull; Reflektera kort över den kodbas, koden, strukturen som
                användes till uppgiften me/report, hur uppfattar du den?
            </strong>
            <br /><br />

            - Koden var lätt att förstå och välstrukturerad med välkända
            designmönster på lämpligt sätt. Vissa utmaningar uppstod dock vid
            förståelsen av instruktionerna till Symfony. Ibland ville saker inte
            fungera direkt, som tänkt.

            <br /><br /><br />

            <strong>
                &bull; Med tanke på artikeln “PHP The Right Way”, vilka delar in
                den finner du extra intressanta och värdefulla? Är det några
                särskilda områden som du känner att du vill veta mer om? Lyft
                fram några delar av artikeln som du känner mer värdefulla.
            </strong>
            <br /><br />

            - Det som verkligen tilltalar mig med "PHP The Right Way"-artikeln
            är avsnittet om säkerhet. Jag anser att säkerhet är en absolut
            grundläggande och avgörande aspekt inom webbutveckling, eftersom den
            har en direkt påverkan på användarnas integritet. Genom att använda
            bästa praxis inom säkerhet kan man skydda webbapplikationer från
            attacker och garantera att användardata hanteras på ett ansvarsfullt
            sätt.
            <br /><br />
            Avsnittet täcker ämnen som webbapplikationssäkerhet, lösenordshashning
            och datafiltrering och är därför särskilt intressant för mig. Jag anser
            att dessa ämnen är grundläggande och viktiga för att säkra både webbapplikationer
            och användardata. Genom att ha en god förståelse av dessa ämnen kan man
            minska risken för attacker och skydda användarnas data på ett mer effektivt
            sätt. Jag skulle i synnerhet vilja veta mer om SQL Injection, Cross-Site
            Scripting, Local/Remote File Inclusion samt olika vägar att skydda sig
            mot dessa.
            <br /><br /><br />

            <strong>&bull; Vilken är din TIL för detta kmom?</strong>
            <br /><br />

            - Jag har lärt mig mer om Symfony, Composer och PHP generellt. Jag
            har också lärt mig mer om objektorientering som begrepp och vad det
            innebär. Jag har också lärt mig litegrann om säkerhet vad det gäller
            PHP.

            <br /><br /><br />
        </p>
    </article>

    <article id="kmom02">
        <h2>
            Kmom02
        </h2>
        <p>
            <strong>
                &bull; Förklara kort de objektorienterade konstruktionerna arv,
                komposition, interface och trait och hur de används i PHP.
            </strong><br /><br />

            - Arv i PHP möjliggör att skapa nya klasser baserat på befintliga
            klasser, vilket innebär att den nya klassen kommer att ärva
            egenskaper och metoder från den befintliga klassen.
            <br /><br />
            Komposition i PHP möjliggör att objekt kan innehålla andra objekt som
            en del av sina egenskaper. Istället för att en klass utökas genom arv,
            kan en klass samarbeta med andra objekt genom att de inkluderas som en
            del av klassens egenskaper.
            <br /><br />
            Interface i PHP är en slags kontrakt som kräver att en klass implementerar
            vissa metoder och egenskaper. Det gör det möjligt att definiera ett gränssnitt
            som flera klasser kan implementera på olika sätt.
            <br /><br />
            Trait i PHP är en slags återanvändbar kod som kan användas för att tillföra
            funktionalitet till flera klasser utan att man behöver använda arv. Traits
            kan inkluderas i klasser med hjälp av en "use" deklaration och gör det
            möjligt att återanvända kod på ett smidigt sätt.

            <br /><br /><br />

            <strong>
                &bull; Berätta om din implementation från uppgiften. Hur löste
                du uppgiften, är du nöjd/missnöjd, vilken förbättringspotential
                ser du i din koden och dina klasser?
            </strong><br /><br />

            - Jag tyckte att uppgiften var utmanande, men jag kände mig nöjd med
            min implementation. Jag tror dock att det alltid finns utrymme för
            förbättringar, särskilt i fråga om att göra koden mer DRY, öka
            återanvändbarheten av klasser och göra den mer strukturerad.

            <br /><br />
            Jag tror också att jag skulle kunna lära mig mer om objektorienterad
            programmering och implementera mer avancerade tekniker för att ytterligare
            förbättra min kod.
            <br /><br /><br />

            <strong>
                &bull; Vilka är dina reflektioner så här långt med att jobb i
                Symfony med applikationskod enligt MVC?
            </strong><br /><br />

            - Jag har märkt att det känns bättre och bättre att arbeta i Symfony
            och jag ser nyttan av att använda MVC-mönstret för att organisera
            applikationskoden.
            <br /><br />
            Samtidigt föredrar jag vanligtvis att arbeta med JavaScript och dess
            ramverk istället för PHP. Men jag ser definitivt värdet i att lära mig
            Symfony och dess arkitektur.
            <br /><br /><br />

            <strong>
                &bull; Vilken är din TIL för detta kmom?
            </strong><br /><br />
            - Jag har lärt mig att jobba med klasser och objekt i PHP.

            <br /><br /><br />
        </p>
    </article>

    <article id="kmom03">
        <h2>
            Kmom03
        </h2>
        <p>
            <ul>
                <li>
                    <p>
                        Berätta hur det kändes att modellera ett kortspel med
                        flödesdiagram och psuedokod. Var det något som du tror
                        stödjer dig i din problemlösning och tankearbete för att
                        strukturera koden kring en applikation?
                    </p>
                    <ul>
                        <li>
                            Det kändes svårt i allmänhet. Även om jag använde
                            flödesdiagram och psuedokod, var det svårt att se
                            hur det skulle implementeras i praktiken.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Berätta om din implementation från uppgiften. Hur löste
                        du uppgiften, är du nöjd/missnöjd, vilken
                        förbättringspotential ser du i din koden, dina klasser
                        och applikationen som helhet?
                    </p>
                    <ul>
                        <li>
                            Jag är relativt nöjd med mitt arbete. Dock hade jag
                            en tanke om att implementera Split och Double
                            funktioner, vilket jag råkade avsätta onödigt lång
                            tid till. Det bidrog till att jag först nu försöker
                            få klart denna kurs, eftersom jag såg det som
                            omöjligt att slutföra uppgiften.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Vilken är din känsla för att koda i ett ramverk som
                        Symfony, så här långt in i kursen?
                    </p>
                    <ul>
                        <li>
                            Jag tycker inte att ramverket är särskilt tydligt.
                            Personligen föredrar jag Node.js med något smidigt
                            ramverk. Jag tror det kan bero mer på PHP och
                            filstrukturen för hela setupen. Setup var
                            omständigt. Att flytta mellan maskiner är
                            omständigt. Det är omständigt att sätta sig in i
                            mängden av folders o filer i detta projekt.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Vilken är din TIL för detta kmom?
                    </p>
                    <ul>
                        <li>
                            Jag lärde mig mer om PHP, klasser, routes, och jobba
                            med Symfony.
                        </li>
                    </ul>
                </li>
            </ul>
        </p>
    </article>

    <article id="kmom04">
        <h2>
            Kmom04
        </h2>
        <p>
            <ul>
                <li>
                    <p>
                        Berätta hur du upplevde att skriva kod som testar annan
                        kod med PHPUnit och hur du upplever phpunit rent
                        allmänt.
                    </p>
                    <ul>
                        <li>
                            PHPUnit känns relativt smidigt när det väl funkar.
                            Det var rätt krångligt för setup iomed php xdebug.
                            Det funkade också pga samma anledning olika på olika
                            operativsystem. Men när det väl fungerade så gjorde
                            det jobbet helt okej. Jag tror en till anledning
                            till min skeptiska inställning är Composer. Dessutom
                            har vi ju NPM samtidigt som Composer i detta
                            projekt. Många dependencies som ska lira
                            tillsammans.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Hur väl lyckades du med kodtäckningen av din kod,
                        lyckades du nå mer än 90% kodtäckning?
                    </p>
                    <ul>
                        <li>
                            Jag lyckades nå 100% kodtäckning. Det kanske inte
                            var supernödvändigt med så högt men till exempel om
                            jag hade skippat att testa shuffle, skulle det bara
                            visat runt 50% kodtäckning av den klassen, vilket
                            var under kravet för uppgiften.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Upplever du din egen kod som &quot;testbar kod&quot;
                        eller finns det delar i koden som är mer eller mindre
                        testbar och finns det saker som kan göras för att
                        förbättra kodens testbarhet?
                    </p>
                    <ul>
                        <li>
                            Det är mestadels testbar kod. Det som jag skulle
                            säga är svårtestad kod är Controller:na. Jag vet
                            inte om det finns jättemycket att göra för att utöka
                            testbarheten. Kanske dela upp i fler helper
                            funktioner. Göra det mer DRY.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Valde du att skriva om delar av din kod för att
                        förbättra den eller göra den mer testbar, om så berätta
                        lite hur du tänkte.
                    </p>
                    <ul>
                        <li>
                            Jag trodde att man behövde göra phpdoc OCH phpunit?
                            Kanske missförstog uppgiften. Jag skrev några
                            DocBlocks för Card klassen.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Fundera över om du anser att testbar kod är något som
                        kan identifiera &quot;snygg och ren kod&quot;.
                    </p>
                    <ul>
                        <li>
                            Jag skulle säga att de går hand i hand. Mer DRY och
                            &quot;snygg&quot; kod är oftast lättare att testa.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Vilken är din TIL för detta kmom?
                    </p>
                    <ul>
                        <li>
                            Jag har lärt mig mer om PHPUnit, Composer, NPM,
                            phpdoc och om hur hemskt det kan vara att arbeta med
                            ett PHP ramverk.
                        </li>
                    </ul>
                </li>
            </ul>
        </p>
    </article>

    <article id="kmom05">
        <h2>
            Kmom05
        </h2>
        <p>
            <ul>
                <li>
                    <p>
                        Gick det bra att jobba igenom övningen med Symfony och
                        Doctrine. Något särskilt du tänkte/reagerade på under
                        övningen?
                    </p>
                    <ul>
                        <li>
                            Det gick bra med övningen, men det var tufft i
                            början. Till slut förstod jag hur Doctrine
                            fungerade. Jag reagerade mest nog på setup av
                            databas, installation av sqlite3 på windows. På
                            windows var det lite svårt när man inte har fulla
                            admin rättigheter. Sen setup av tables i databasen.
                            Det var krångligt att hålla koll på migrate etc. Och
                            ibland var man tvungen att gå in i migrate scriptet
                            och ändra saker manuellt.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Berätta om din applikation och hur du tänkte när du
                        byggde upp den. Tänkte du något speciellt på
                        användargränssnittet?
                    </p>
                    <ul>
                        <li>
                            Jag tänkte på att allt skulle flyta ihop så bra som
                            möjligt. Jag såg till så att det var så självklart
                            som möjligt att använda.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Gick det bra att jobba med ORM i CRUD eller vad anser du
                        om det, jämför gärna med andra sätt att jobba med
                        databaser?
                    </p>
                    <ul>
                        <li>
                            Det känns relativt bra. Jag skulle nog helst undvika
                            att hantera just databaser i min framtida karriär.
                            Jag skulle föredra att arbeta med andra delar av
                            mjukvaruutveckling.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Vad är din uppfattning om ORM så här långt och relatera
                        gärna till andra sätt att jobba med applikationskod mot
                        databaser?
                    </p>
                    <ul>
                        <li>
                            ORM funkar bra men jag tror återigen min åsikt
                            färgas av att jag inte tycker om att arbeta med PHP
                            eller Symfony.
                        </li>
                    </ul>
                </li>
                <li>
                    <p>
                        Vilken är din TIL för detta kmom?
                    </p>
                    <ul>
                        <li>
                            Lärde mig om Doctrine och ORM. Lärde mig att
                            implementera sqlite databas med Symfony.
                        </li>
                    </ul>
                </li>
            </ul>
        </p>
    </article>

    <article id="kmom06">
        <h2>
            Kmom06
        </h2>
        <p>
            text here
        </p>
    </article>
{% endblock %}

{% block sidebar %}
    <aside id="sidebar">
        <h1>
            Kursmoment
        </h1>
        <ul>
            <li><a href="#kmom01">kmom01</a></li>
            <li><a href="#kmom02">kmom02</a></li>
            <li><a href="#kmom03">kmom03</a></li>
            <li><a href="#kmom04">kmom04</a></li>
            <li><a href="#kmom05">kmom05</a></li>
            <li><a href="#kmom06">kmom06</a></li>
        </ul>
    </aside>
{% endblock %}
